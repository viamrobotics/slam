name: Go Test

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build_and_test:
    name: Build and Test Go Code
    strategy:
      matrix:
        include:
          - arch: [x64, qemu-host]
            image: ghcr.io/viamrobotics/canon:amd64-cache
            platform: linux/amd64
          - arch: [arm64, qemu-host]
            image: ghcr.io/viamrobotics/canon:arm64-cache
            platform: linux/arm64
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform ${{ matrix.platform }}
    timeout-minutes: 5

    steps:
    - name: Check out main branch code
      if: github.event_name != 'pull_request_target'
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Check out PR branch code
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0 # 0 so we can analyze history for coverage

    - name: Set main env vars
      if: github.event_name != 'pull_request_target'
      run: |
        echo "GITHUB_X_HEAD_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
        echo "GITHUB_X_HEAD_REF=${GITHUB_REF_NAME}" >> $GITHUB_ENV

    - name: Set PR env vars
      if: github.event_name == 'pull_request_target'
      env:
        GITHUB_HEAD_REF_SAN: ${{ github.event.pull_request.head.label }}
      run: |
        echo "GITHUB_X_HEAD_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
        echo "GITHUB_X_HEAD_REF=${GITHUB_HEAD_REF_SAN}" >> $GITHUB_ENV
        echo "GITHUB_X_PR_BASE_SHA=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
        echo "GITHUB_X_PR_BASE_REF=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV

    - name: Verify no uncommitted changes from "make lint"
      run: |
        git init
        git add .
        chown -R testbot .
        sudo -u testbot bash -lc make lint
        GEN_DIFF=$(git status -s)

        if [ -n "$GEN_DIFF" ]; then
            echo '"make lint" resulted in changes not in git' 1>&2
            git status
            exit 1
        fi

    - name: Test
      run: |
        sudo --preserve-env=MONGODB_TEST_OUTPUT_URI,GITHUB_SHA,GITHUB_RUN_ID,GITHUB_RUN_NUMBER,GITHUB_RUN_ATTEMPT,GITHUB_X_PR_BASE_SHA,GITHUB_X_PR_BASE_REF,GITHUB_X_HEAD_REF,GITHUB_X_HEAD_SHA,GITHUB_REPOSITORY -u testbot bash -lc 'make test'
